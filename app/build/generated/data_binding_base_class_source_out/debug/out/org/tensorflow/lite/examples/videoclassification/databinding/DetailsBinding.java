// Generated by view binder compiler. Do not edit!
package org.tensorflow.lite.examples.videoclassification.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.tensorflow.lite.examples.videoclassification.R;

public final class DetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout bottomSheetLayout;

  @NonNull
  public final Button btnClearModelState;

  @NonNull
  public final LinearLayout gestureLayout;

  @NonNull
  public final Spinner spnSelectModel;

  @NonNull
  public final TextView tvDetectedItem0;

  @NonNull
  public final TextView tvDetectedItem0Value;

  private DetailsBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout bottomSheetLayout,
      @NonNull Button btnClearModelState, @NonNull LinearLayout gestureLayout,
      @NonNull Spinner spnSelectModel, @NonNull TextView tvDetectedItem0,
      @NonNull TextView tvDetectedItem0Value) {
    this.rootView = rootView;
    this.bottomSheetLayout = bottomSheetLayout;
    this.btnClearModelState = btnClearModelState;
    this.gestureLayout = gestureLayout;
    this.spnSelectModel = spnSelectModel;
    this.tvDetectedItem0 = tvDetectedItem0;
    this.tvDetectedItem0Value = tvDetectedItem0Value;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DetailsBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout bottomSheetLayout = (LinearLayout) rootView;

      id = R.id.btnClearModelState;
      Button btnClearModelState = ViewBindings.findChildViewById(rootView, id);
      if (btnClearModelState == null) {
        break missingId;
      }

      id = R.id.gesture_layout;
      LinearLayout gestureLayout = ViewBindings.findChildViewById(rootView, id);
      if (gestureLayout == null) {
        break missingId;
      }

      id = R.id.spnSelectModel;
      Spinner spnSelectModel = ViewBindings.findChildViewById(rootView, id);
      if (spnSelectModel == null) {
        break missingId;
      }

      id = R.id.tv_detected_item0;
      TextView tvDetectedItem0 = ViewBindings.findChildViewById(rootView, id);
      if (tvDetectedItem0 == null) {
        break missingId;
      }

      id = R.id.tv_detected_item0_value;
      TextView tvDetectedItem0Value = ViewBindings.findChildViewById(rootView, id);
      if (tvDetectedItem0Value == null) {
        break missingId;
      }

      return new DetailsBinding((LinearLayout) rootView, bottomSheetLayout, btnClearModelState,
          gestureLayout, spnSelectModel, tvDetectedItem0, tvDetectedItem0Value);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
